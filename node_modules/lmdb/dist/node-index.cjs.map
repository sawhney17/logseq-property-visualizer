{"version":3,"file":"node-index.cjs","sources":["../native.js","../util/when.js","../writer.js","../level.js","../caching.js","../util/ArrayLikeIterable.js","../keys.js","../query.js","../index.js","../node-index.js"],"sourcesContent":["export let Env, Compression, Cursor, getAddress, getAddressShared, require, arch, fs\r\nexport function setNativeFunctions(nativeInterface) {\r\n\tEnv = nativeInterface.Env\r\n\tCompression = nativeInterface.Compression\r\n\tgetAddress = nativeInterface.getAddress\r\n    getAddressShared = nativeInterface.getAddressShared\r\n    Cursor = nativeInterface.Cursor\r\n    require = nativeInterface.require\r\n    arch = nativeInterface.arch\r\n    fs = nativeInterface.fs\r\n}\r\n","export function when(promise, callback, errback) {\r\n  if (promise && promise.then) {\r\n    return errback ?\r\n      promise.then(callback, errback) :\r\n      promise.then(callback)\r\n  }\r\n  return callback(promise)\r\n}\r\n","import { getAddressShared as getAddress } from './native.js'\r\nimport { when } from './util/when.js'\r\nvar backpressureArray\r\n\r\nconst MAX_KEY_SIZE = 1978\r\nconst WAITING_OPERATION = 0x2000000\r\nconst BACKPRESSURE_THRESHOLD = 50000\r\nconst TXN_DELIMITER = 0x8000000\r\nconst TXN_COMMITTED = 0x10000000\r\nconst TXN_FLUSHED = 0x20000000\r\nconst TXN_FAILED = 0x40000000\r\nconst FAILED_CONDITION = 0x4000000\r\nconst REUSE_BUFFER_MODE = 1000\r\n\r\nconst SYNC_PROMISE_SUCCESS = Promise.resolve(true)\r\nconst SYNC_PROMISE_FAIL = Promise.resolve(false)\r\nexport const ABORT = {}\r\nconst CALLBACK_THREW = {}\r\nSYNC_PROMISE_SUCCESS.isSync = true\r\nSYNC_PROMISE_FAIL.isSync = true\r\nconst ByteArray = typeof Buffer != 'undefined' ? Buffer.from : Uint8Array\r\n//let debugLog = []\r\n\r\nvar log = []\r\nexport function addWriteMethods(LMDBStore, { env, fixedBuffer, resetReadTxn, useWritemap, binaryBuffer,\r\n\teventTurnBatching, txnStartThreshold, batchStartThreshold, overlappingSync, commitDelay, separateFlushed }) {\r\n\t//  stands for write instructions\r\n\tvar dynamicBytes\r\n\tfunction allocateInstructionBuffer() {\r\n\t\tlet buffer = new SharedArrayBuffer(0x10000) // Must use a shared buffer to ensure GC doesn't move it around\r\n\t\tdynamicBytes = new ByteArray(buffer)\r\n\t\tlet uint32 = dynamicBytes.uint32 = new Uint32Array(buffer, 0, 0x10000 >> 2)\r\n\t\tuint32[0] = 0\r\n\t\tdynamicBytes.float64 = new Float64Array(buffer, 0, 0x10000 >> 3)\r\n\t\tbuffer.address = getAddress(buffer)\r\n\t\tuint32.address = buffer.address + uint32.byteOffset\r\n\t\tdynamicBytes.position = 0\r\n\t\treturn dynamicBytes\r\n\t}\r\n\tvar outstandingWriteCount = 0\r\n\tvar startAddress = 0\r\n\tvar writeTxn = null\r\n\tvar abortedNonChildTransactionWarn\r\n\tvar nextTxnCallbacks = []\r\n\tvar commitPromise, flushPromise, flushResolvers = []\r\n\tcommitDelay = commitDelay || 0\r\n\teventTurnBatching = eventTurnBatching === false ? false : true\r\n\tvar enqueuedCommit\r\n\tvar afterCommitCallbacks = []\r\n\tvar beforeCommitCallbacks = []\r\n\tvar enqueuedEventTurnBatch\r\n\tif (separateFlushed === undefined)\r\n\t\tseparateFlushed = overlappingSync\r\n\tvar batchDepth = 0\r\n\tvar writeBatchStart, outstandingBatchCount\r\n\ttxnStartThreshold = txnStartThreshold || 5\r\n\tbatchStartThreshold = batchStartThreshold || 1000\r\n\r\n\tallocateInstructionBuffer()\r\n\tdynamicBytes.uint32[0] = TXN_DELIMITER | TXN_COMMITTED | TXN_FLUSHED\r\n\tvar txnResolution, lastQueuedResolution, nextResolution = { uint32: dynamicBytes.uint32, flagPosition: 0, }\r\n\tvar uncommittedResolution = { next: nextResolution }\r\n\tvar unwrittenResolution = nextResolution\r\n\tfunction writeInstructions(flags, store, key, value, version, ifVersion) {\r\n\t\tlet writeStatus\r\n\t\tlet targetBytes, position\r\n\t\tlet valueBuffer, valueSize, valueBufferStart\r\n\t\tif (flags & 2) {\r\n\t\t\t// encode first in case we have to write a shared structure\r\n\t\t\tlet encoder = store.encoder\r\n\t\t\tif (value && value[binaryBuffer])\r\n\t\t\t\tvalueBuffer = value[binaryBuffer]\r\n\t\t\telse if (encoder) {\r\n\t\t\t\tif (encoder.copyBuffers) // use this as indicator for support buffer reuse for now\r\n\t\t\t\t\tvalueBuffer = encoder.encode(value, REUSE_BUFFER_MODE)\r\n\t\t\t\telse { // various other encoders, including JSON.stringify, that might serialize to a string\r\n\t\t\t\t\tvalueBuffer = encoder.encode(value)\r\n\t\t\t\t\tif (typeof valueBuffer == 'string')\r\n\t\t\t\t\t\tvalueBuffer = Buffer.from(valueBuffer) // TODO: Would be nice to write strings inline in the instructions\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof value == 'string') {\r\n\t\t\t\tvalueBuffer = Buffer.from(value) // TODO: Would be nice to write strings inline in the instructions\r\n\t\t\t} else if (value instanceof Uint8Array)\r\n\t\t\t\tvalueBuffer = value\r\n\t\t\telse\r\n\t\t\t\tthrow new Error('Invalid value to put in database ' + value + ' (' + (typeof value) +'), consider using encoder')\r\n\t\t\tvalueBufferStart = valueBuffer.start\r\n\t\t\tif (valueBufferStart > -1) // if we have buffers with start/end position\r\n\t\t\t\tvalueSize = valueBuffer.end - valueBufferStart // size\r\n\t\t\telse\r\n\t\t\t\tvalueSize = valueBuffer.length\r\n\t\t\tif (store.dupSort && valueSize > MAX_KEY_SIZE)\r\n\t\t\t\tthrow new Error('The value is larger than the maximum size (' + MAX_KEY_SIZE + ') for a value in a dupSort database')\r\n\t\t} else\r\n\t\t\tvalueSize = 0\r\n\t\tif (writeTxn) {\r\n\t\t\ttargetBytes = fixedBuffer\r\n\t\t\tposition = 0\r\n\t\t} else {\r\n\t\t\tif (eventTurnBatching && !enqueuedEventTurnBatch && batchDepth == 0) {\r\n\t\t\t\tenqueuedEventTurnBatch = setImmediate(() => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tfor (let i = 0, l = beforeCommitCallbacks.length; i < l; i++) {\r\n\t\t\t\t\t\t\tbeforeCommitCallbacks[i]()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\tconsole.error(error)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tenqueuedEventTurnBatch = null\r\n\t\t\t\t\t//console.log('ending event turn')\r\n\t\t\t\t\tbatchDepth--\r\n\t\t\t\t\tfinishBatch()\r\n\t\t\t\t\tif (writeBatchStart)\r\n\t\t\t\t\t\twriteBatchStart() // TODO: When we support delay start of batch, optionally don't delay this\r\n\t\t\t\t})\r\n\t\t\t\tcommitPromise = null // reset the commit promise, can't know if it is really a new transaction prior to finishWrite being called\r\n\t\t\t\tflushPromise = null\r\n\t\t\t\twriteBatchStart = writeInstructions(1, store)\r\n\t\t\t\toutstandingBatchCount = 0\r\n\t\t\t\tbatchDepth++\r\n\t\t\t}\r\n\t\t\ttargetBytes = dynamicBytes\r\n\t\t\tposition = targetBytes.position\r\n\t\t}\r\n\t\tlet uint32 = targetBytes.uint32, float64 = targetBytes.float64\r\n\t\tlet flagPosition = position << 1 // flagPosition is the 32-bit word starting position\r\n\r\n\t\t// don't increment position until we are sure we don't have any key writing errors\r\n\t\tif (!uint32) {\r\n\t\t\tthrow new Error('Internal buffers have been corrupted')\r\n\t\t}\r\n\t\tuint32[flagPosition + 1] = store.db.dbi\r\n\t\tif (flags & 4) {\r\n\t\t\tlet keyStartPosition = (position << 3) + 12\r\n\t\t\tlet endPosition\r\n\t\t\ttry {\r\n\t\t\t\tendPosition = store.writeKey(key, targetBytes, keyStartPosition)\r\n\t\t\t} catch(error) {\r\n\t\t\t\ttargetBytes.fill(0, keyStartPosition)\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t\tlet keySize = endPosition - keyStartPosition\r\n\t\t\tif (keySize > MAX_KEY_SIZE) {\r\n\t\t\t\ttargetBytes.fill(0, keyStartPosition) // restore zeros\r\n\t\t\t\tthrow new Error('Key size is larger than the maximum key size (' + MAX_KEY_SIZE + ')')\r\n\t\t\t}\r\n\t\t\tuint32[flagPosition + 2] = keySize\r\n\t\t\tposition = (endPosition + 16) >> 3\r\n\t\t\tif (flags & 2) {\r\n\t\t\t\tlet mustCompress\r\n\t\t\t\tif (valueBufferStart > -1) { // if we have buffers with start/end position\r\n\t\t\t\t\t// record pointer to value buffer\r\n\t\t\t\t\tfloat64[position] = (valueBuffer.address ||\r\n\t\t\t\t\t\t(valueBuffer.address = getAddress(valueBuffer.buffer) + valueBuffer.byteOffset)) + valueBufferStart\r\n\t\t\t\t\tmustCompress = valueBuffer[valueBufferStart] >= 254 // this is the compression indicator, so we must compress\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet valueArrayBuffer = valueBuffer.buffer\r\n\t\t\t\t\t// record pointer to value buffer\r\n\t\t\t\t\tfloat64[position] = (valueArrayBuffer.address ||\r\n\t\t\t\t\t\t(valueArrayBuffer.address = getAddress(valueArrayBuffer))) + valueBuffer.byteOffset\r\n\t\t\t\t\tmustCompress = valueBuffer[0] >= 254 // this is the compression indicator, so we must compress\r\n\t\t\t\t}\r\n\t\t\t\tuint32[(position++ << 1) - 1] = valueSize\r\n\t\t\t\tif (store.compression && (valueSize >= store.compression.threshold || mustCompress)) {\r\n\t\t\t\t\tflags |= 0x100000;\r\n\t\t\t\t\tfloat64[position] = store.compression.address\r\n\t\t\t\t\tif (!writeTxn)\r\n\t\t\t\t\t\tenv.compress(uint32.address + (position << 3), () => {\r\n\t\t\t\t\t\t\t// this is never actually called, just use to pin the buffer in memory until it is finished\r\n\t\t\t\t\t\t\tconsole.log(float64)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\tposition++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ifVersion !== undefined) {\r\n\t\t\t\tif (ifVersion === null)\r\n\t\t\t\t\tflags |= 0x10\r\n\t\t\t\telse {\r\n\t\t\t\t\tflags |= 0x100\r\n\t\t\t\t\tfloat64[position++] = ifVersion\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (version !== undefined) {\r\n\t\t\t\tflags |= 0x200\r\n\t\t\t\tfloat64[position++] = version || 0\r\n\t\t\t}\r\n\t\t} else\r\n\t\t\tposition++\r\n\t\ttargetBytes.position = position\r\n\t\t//console.log('js write', (targetBytes.buffer.address + (flagPosition << 2)).toString(16), flags.toString(16))\r\n\t\tif (writeTxn) {\r\n\t\t\tuint32[0] = flags\r\n\t\t\tenv.write(uint32.address)\r\n\t\t\treturn () => (uint32[0] & FAILED_CONDITION) ? SYNC_PROMISE_FAIL : SYNC_PROMISE_SUCCESS\r\n\t\t}\r\n\t\t// if we ever use buffers that haven't been zero'ed, need to clear out the next slot like this:\r\n\t\t// uint32[position << 1] = 0 // clear out the next slot\r\n\t\tlet nextUint32\r\n\t\tif (position > 0x1e00) { // 61440 bytes\r\n\t\t\t// make new buffer and make pointer to it\r\n\t\t\tlet lastPosition = position\r\n\t\t\ttargetBytes = allocateInstructionBuffer()\r\n\t\t\tposition = targetBytes.position\r\n\t\t\tfloat64[lastPosition + 1] = targetBytes.uint32.address + position\r\n\t\t\tuint32[lastPosition << 1] = 3 // pointer instruction\r\n\t\t\t//console.log('pointer from ', (lastFloat64.buffer.address + (lastPosition << 3)).toString(16), 'to', (targetBytes.buffer.address + position).toString(16), 'flag position', (uint32.buffer.address + (flagPosition << 2)).toString(16))\r\n\t\t\tnextUint32 = targetBytes.uint32\r\n\t\t} else\r\n\t\t\tnextUint32 = uint32\r\n\t\tlet resolution = nextResolution\r\n\t\t// create the placeholder next resolution\r\n\t\tnextResolution = resolution.next = store.cache ?\r\n\t\t{\r\n\t\t\tuint32: nextUint32,\r\n\t\t\tflagPosition: position << 1,\r\n\t\t\tflag: 0, // TODO: eventually eliminate this, as we can probably signify success by zeroing the flagPosition\r\n\t\t\tvalueBuffer: fixedBuffer, // these are all just placeholders so that we have the right hidden class initially allocated\r\n\t\t\tnext: null,\r\n\t\t\tkey,\r\n\t\t\tstore,\r\n\t\t\tvalueSize,\r\n\t\t} :\r\n\t\t{\r\n\t\t\tuint32: nextUint32,\r\n\t\t\tflagPosition: position << 1,\r\n\t\t\tflag: 0, // TODO: eventually eliminate this, as we can probably signify success by zeroing the flagPosition\r\n\t\t\tvalueBuffer: fixedBuffer, // these are all just placeholders so that we have the right hidden class initially allocated\r\n\t\t\tnext: null,\r\n\t\t}\r\n\t\tlet writtenBatchDepth = batchDepth\r\n\r\n\t\treturn (callback) => {\r\n\t\t\tif (writtenBatchDepth) {\r\n\t\t\t\t// if we are in a batch, the transaction can't close, so we do the faster,\r\n\t\t\t\t// but non-deterministic updates, knowing that the write thread can\r\n\t\t\t\t// just poll for the status change if we miss a status update\r\n\t\t\t\twriteStatus = uint32[flagPosition]\r\n\t\t\t\tuint32[flagPosition] = flags\r\n\t\t\t\t//writeStatus = Atomics.or(uint32, flagPosition, flags)\r\n\t\t\t\tif (writeBatchStart && !writeStatus) {\r\n\t\t\t\t\toutstandingBatchCount += 1 + (valueSize >> 12)\r\n\t\t\t\t\t//console.log(outstandingBatchCount, batchStartThreshold)\r\n\t\t\t\t\tif (outstandingBatchCount > batchStartThreshold) {\r\n\t\t\t\t\t\toutstandingBatchCount = 0\r\n\t\t\t\t\t\twriteBatchStart()\r\n\t\t\t\t\t\twriteBatchStart = null\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else // otherwise the transaction could end at any time and we need to know the\r\n\t\t\t\t// deterministically if it is ending, so we can reset the commit promise\r\n\t\t\t\t// so we use the slower atomic operation\r\n\t\t\t\twriteStatus = Atomics.or(uint32, flagPosition, flags)\r\n\t\r\n\t\t\toutstandingWriteCount++\r\n\t\t\tif (writeStatus & TXN_DELIMITER) {\r\n\t\t\t\t//console.warn('Got TXN delimiter', ( uint32.address + (flagPosition << 2)).toString(16))\r\n\t\t\t\tcommitPromise = null // TODO: Don't reset these if this comes from the batch start operation on an event turn batch\r\n\t\t\t\tflushPromise = null\r\n\t\t\t\tqueueCommitResolution(resolution)\r\n\t\t\t\tif (!startAddress) {\r\n\t\t\t\t\tstartAddress = uint32.address + (flagPosition << 2)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!flushPromise && overlappingSync && separateFlushed)\r\n\t\t\t\tflushPromise = new Promise(resolve => flushResolvers.push(resolve))\r\n\t\t\tif (writeStatus & WAITING_OPERATION) { // write thread is waiting\r\n\t\t\t\t//console.log('resume batch thread', uint32.buffer.address + (flagPosition << 2))\r\n\t\t\t\tenv.write(0)\r\n\t\t\t}\r\n\t\t\tif (outstandingWriteCount > BACKPRESSURE_THRESHOLD) {\r\n\t\t\t\tif (!backpressureArray)\r\n\t\t\t\t\tbackpressureArray = new Int32Array(new SharedArrayBuffer(4), 0, 1)\r\n\t\t\t\tAtomics.wait(backpressureArray, 0, 0, Math.round(outstandingWriteCount / BACKPRESSURE_THRESHOLD))\r\n\t\t\t}\r\n\t\t\tif (startAddress) {\r\n\t\t\t\tif (eventTurnBatching)\r\n\t\t\t\t\tstartWriting() // start writing immediately because this has already been batched/queued\r\n\t\t\t\telse if (!enqueuedCommit && txnStartThreshold) {\r\n\t\t\t\t\tenqueuedCommit = commitDelay == 0 ? setImmediate(() => startWriting()) : setTimeout(() => startWriting(), commitDelay)\r\n\t\t\t\t} else if (outstandingWriteCount > txnStartThreshold)\r\n\t\t\t\t\tstartWriting()\r\n\t\t\t}\r\n\r\n\t\t\tif ((outstandingWriteCount & 7) === 0)\r\n\t\t\t\tresolveWrites()\r\n\t\t\t\r\n\t\t\tif (store.cache) {\r\n\t\t\t\tresolution.key = key\r\n\t\t\t\tresolution.store = store\r\n\t\t\t\tresolution.valueSize = valueBuffer ? valueBuffer.length : 0\r\n\t\t\t}\r\n\t\t\tresolution.valueBuffer = valueBuffer\r\n\t\t\tlastQueuedResolution = resolution\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tresolution.reject = callback\r\n\t\t\t\tresolution.resolve = (value) => callback(null, value)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (ifVersion === undefined) {\r\n\t\t\t\tif (writtenBatchDepth > 1)\r\n\t\t\t\t\treturn SYNC_PROMISE_SUCCESS // or return undefined?\r\n\t\t\t\tif (!commitPromise) {\r\n\t\t\t\t\tcommitPromise = new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tresolution.resolve = resolve\r\n\t\t\t\t\t\tresolution.reject = reject\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (separateFlushed)\r\n\t\t\t\t\t\tcommitPromise.flushed = overlappingSync ? flushPromise : commitPromise\r\n\t\t\t\t}\r\n\t\t\t\treturn commitPromise\r\n\t\t\t}\r\n\t\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\t\tresolution.resolve = resolve\r\n\t\t\t\tresolution.reject = reject\r\n\t\t\t})\r\n\t\t\tif (separateFlushed)\r\n\t\t\t\tpromise.flushed = overlappingSync ? flushPromise : promise\r\n\t\t\treturn promise\r\n\t\t}\r\n\t}\r\n\tfunction startWriting() {\r\n\t\t//console.log('start address ' + startAddress.toString(16), store.name)\r\n\t\tif (enqueuedCommit) {\r\n\t\t\tclearImmediate(enqueuedCommit)\r\n\t\t\tenqueuedCommit = null\r\n\t\t}\r\n\t\tlet resolvers = flushResolvers\r\n\t\tflushResolvers = []\r\n\t\tenv.startWriting(startAddress, (status) => {\r\n\t\t\t//console.log('finished batch', store.name)\r\n\t\t\tif (dynamicBytes.uint32[dynamicBytes.position << 1] & TXN_DELIMITER)\r\n\t\t\t\tqueueCommitResolution(nextResolution)\r\n\r\n\t\t\tresolveWrites(true)\r\n\t\t\tswitch (status) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tfor (let i = 0; i < resolvers.length; i++)\r\n\t\t\t\t\t\tresolvers[i]()\r\n\t\t\t\tcase 1:\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\texecuteTxnCallbacks()\r\n\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\tconsole.error(status)\r\n\t\t\t\tif (commitRejectPromise) {\r\n\t\t\t\t\tcommitRejectPromise.reject(status)\r\n\t\t\t\t\tcommitRejectPromise = null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tstartAddress = 0\r\n\t}\r\n\r\n\tfunction queueCommitResolution(resolution) {\r\n\t\tif (!resolution.isTxn) {\r\n\t\t\tresolution.isTxn = true\r\n\t\t\tif (txnResolution) {\r\n\t\t\t\ttxnResolution.nextTxn = resolution\r\n\t\t\t\t//outstandingWriteCount = 0\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttxnResolution = resolution\r\n\t\t}\r\n\t}\r\n\tvar TXN_DONE = (separateFlushed ? TXN_COMMITTED : TXN_FLUSHED) | TXN_FAILED\r\n\tfunction resolveWrites(async) {\r\n\t\t// clean up finished instructions\r\n\t\tlet instructionStatus\r\n\t\twhile ((instructionStatus = unwrittenResolution.uint32[unwrittenResolution.flagPosition])\r\n\t\t\t\t& 0x1000000) {\r\n\t\t\t//console.log('instructionStatus: ' + instructionStatus.toString(16))\r\n\t\t\tif (unwrittenResolution.callbacks) {\r\n\t\t\t\tnextTxnCallbacks.push(unwrittenResolution.callbacks)\r\n\t\t\t\tunwrittenResolution.callbacks = null\r\n\t\t\t}\r\n\t\t\tif (!unwrittenResolution.isTxn)\r\n\t\t\t\tunwrittenResolution.uint32 = null\r\n\t\t\tunwrittenResolution.valueBuffer = null\r\n\t\t\tunwrittenResolution.flag = instructionStatus\r\n\t\t\toutstandingWriteCount--\r\n\t\t\tunwrittenResolution = unwrittenResolution.next\r\n\t\t}\r\n\t\twhile (txnResolution &&\r\n\t\t\t(instructionStatus = txnResolution.uint32[txnResolution.flagPosition] & TXN_DONE)) {\r\n\t\t\tif (instructionStatus & TXN_FAILED)\r\n\t\t\t\trejectCommit()\r\n\t\t\telse\r\n\t\t\t\tresolveCommit(async)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction resolveCommit(async) {\r\n\t\tafterCommit()\r\n\t\tif (async)\r\n\t\t\tresetReadTxn()\r\n\t\telse\r\n\t\t\tqueueMicrotask(resetReadTxn) // TODO: only do this if there are actually committed writes?\r\n\t\tdo {\r\n\t\t\tif (uncommittedResolution.resolve) {\r\n\t\t\t\tlet flag = uncommittedResolution.flag\r\n\t\t\t\tif (flag < 0)\r\n\t\t\t\t\tuncommittedResolution.reject(new Error(\"Error occurred in write\"))\r\n\t\t\t\telse if (flag & FAILED_CONDITION) {\r\n\t\t\t\t\tuncommittedResolution.resolve(false)\r\n\t\t\t\t} else\r\n\t\t\t\t\tuncommittedResolution.resolve(true)\r\n\t\t\t}\r\n\t\t} while((uncommittedResolution = uncommittedResolution.next) && uncommittedResolution != txnResolution)\r\n\t\ttxnResolution = txnResolution.nextTxn\r\n\t}\r\n\tvar commitRejectPromise\r\n\tfunction rejectCommit() {\r\n\t\tafterCommit()\r\n\t\tif (!commitRejectPromise) {\r\n\t\t\tlet rejectFunction\r\n\t\t\tcommitRejectPromise = new Promise((resolve, reject) => rejectFunction = reject)\r\n\t\t\tcommitRejectPromise.reject = rejectFunction\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tif (uncommittedResolution.reject) {\r\n\t\t\t\tlet flag = uncommittedResolution.flag & 0xf\r\n\t\t\t\tlet error = new Error(\"Commit failed (see commitError for details)\")\r\n\t\t\t\terror.commitError = commitRejectPromise\r\n\t\t\t\tuncommittedResolution.reject(error)\r\n\t\t\t}\r\n\t\t} while((uncommittedResolution = uncommittedResolution.next) && uncommittedResolution != txnResolution)\r\n\t\ttxnResolution = txnResolution.nextTxn\r\n\t}\r\n\tfunction atomicStatus(uint32, flagPosition, newStatus) {\r\n\t\tif (batchDepth) {\r\n\t\t\t// if we are in a batch, the transaction can't close, so we do the faster,\r\n\t\t\t// but non-deterministic updates, knowing that the write thread can\r\n\t\t\t// just poll for the status change if we miss a status update\r\n\t\t\tlet writeStatus = uint32[flagPosition]\r\n\t\t\tuint32[flagPosition] = newStatus\r\n\t\t\treturn writeStatus\r\n\t\t\t//return Atomics.or(uint32, flagPosition, newStatus)\r\n\t\t} else // otherwise the transaction could end at any time and we need to know the\r\n\t\t\t// deterministically if it is ending, so we can reset the commit promise\r\n\t\t\t// so we use the slower atomic operation\r\n\t\t\treturn Atomics.or(uint32, flagPosition, newStatus)\r\n\t}\r\n\tfunction afterCommit() {\r\n\t\tfor (let i = 0, l = afterCommitCallbacks.length; i < l; i++) {\r\n\t\t\tafterCommitCallbacks[i]({ next: uncommittedResolution, last: unwrittenResolution})\r\n\t\t}\r\n\t}\r\n\tasync function executeTxnCallbacks() {\r\n\t\tenv.writeTxn = writeTxn = {}\r\n\t\tlet promises\r\n\t\tlet txnCallbacks\r\n\t\tfor (let i = 0, l = nextTxnCallbacks.length; i < l; i++) {\r\n\t\t\ttxnCallbacks = nextTxnCallbacks[i]\r\n\t\t\tfor (let i = 0, l = txnCallbacks.length; i < l; i++) {\r\n\t\t\t\tlet userTxnCallback = txnCallbacks[i]\r\n\t\t\t\tlet asChild = userTxnCallback.asChild\r\n\t\t\t\tif (asChild) {\r\n\t\t\t\t\tif (promises) {\r\n\t\t\t\t\t\t// must complete any outstanding transactions before proceeding\r\n\t\t\t\t\t\tawait Promise.all(promises)\r\n\t\t\t\t\t\tpromises = null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tenv.beginTxn(1) // abortable\r\n\t\t\t\t\t\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet result = userTxnCallback.callback()\r\n\t\t\t\t\t\tif (result && result.then) {\r\n\t\t\t\t\t\t\tawait result\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (result === ABORT)\r\n\t\t\t\t\t\t\tenv.abortTxn()\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tenv.commitTxn()\r\n\t\t\t\t\t\t\ttxnCallbacks[i] = result\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\tenv.abortTxn()\r\n\t\t\t\t\t\ttxnError(error, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet result = userTxnCallback()\r\n\t\t\t\t\t\ttxnCallbacks[i] = result\r\n\t\t\t\t\t\tif (result && result.then) {\r\n\t\t\t\t\t\t\tif (!promises)\r\n\t\t\t\t\t\t\t\tpromises = []\r\n\t\t\t\t\t\t\tpromises.push(result.catch(() => {}))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\ttxnError(error, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tnextTxnCallbacks = []\r\n\t\tif (promises) { // finish any outstanding commit functions\r\n\t\t\tawait Promise.all(promises)\r\n\t\t}\r\n\t\tenv.writeTxn = writeTxn = false\r\n\t\tfunction txnError(error, i) {\r\n\t\t\t(txnCallbacks.errors || (txnCallbacks.errors = []))[i] = error\r\n\t\t\ttxnCallbacks[i] = CALLBACK_THREW\r\n\t\t}\r\n\t}\r\n\tfunction finishBatch() {\r\n\t\tdynamicBytes.uint32[(dynamicBytes.position + 1) << 1] = 0 // clear out the next slot\r\n\t\tlet writeStatus = atomicStatus(dynamicBytes.uint32, (dynamicBytes.position++) << 1, 2) // atomically write the end block\r\n\t\tnextResolution.flagPosition += 2\r\n\t\tif (writeStatus & WAITING_OPERATION) {\r\n\t\t\tenv.write(0)\r\n\t\t}\r\n\t}\r\n\tObject.assign(LMDBStore.prototype, {\r\n\t\tput(key, value, versionOrOptions, ifVersion) {\r\n\t\t\tlet callback, flags = 15, type = typeof versionOrOptions\r\n\t\t\tif (type == 'object') {\r\n\t\t\t\tif (versionOrOptions.noOverwrite)\r\n\t\t\t\t\tflags |= 0x10\r\n\t\t\t\tif (versionOrOptions.noDupData)\r\n\t\t\t\t\tflags |= 0x20\r\n\t\t\t\tif (versionOrOptions.append)\r\n\t\t\t\t\tflags |= 0x20000\r\n\t\t\t\tif (versionOrOptions.ifVersion != undefined)\r\n\t\t\t\t\tifVersion = versionsOrOptions.ifVersion\r\n\t\t\t\tversionOrOptions = versionOrOptions.version\r\n\t\t\t\tif (typeof ifVersion == 'function')\r\n\t\t\t\t\tcallback = ifVersion\r\n\t\t\t} else if (type == 'function') {\r\n\t\t\t\tcallback = versionOrOptions\r\n\t\t\t}\r\n\t\t\treturn writeInstructions(flags, this, key, value, this.useVersions ? versionOrOptions || 0 : undefined, ifVersion)(callback)\r\n\t\t},\r\n\t\tremove(key, ifVersionOrValue, callback) {\r\n\t\t\tlet flags = 13\r\n\t\t\tlet ifVersion, value\r\n\t\t\tif (ifVersionOrValue !== undefined) {\r\n\t\t\t\tif (typeof ifVersionOrValue == 'function')\r\n\t\t\t\t\tcallback = ifVersionOrValue\r\n\t\t\t\telse if (this.useVersions)\r\n\t\t\t\t\tifVersion = ifVersionOrValue\r\n\t\t\t\telse {\r\n\t\t\t\t\tflags = 14\r\n\t\t\t\t\tvalue = ifVersionOrValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn writeInstructions(flags, this, key, value, undefined, ifVersion)(callback)\r\n\t\t},\r\n\t\tdel(key, options, callback) {\r\n\t\t\treturn this.remove(key, options, callback)\r\n\t\t},\r\n\t\tifNoExists(key, callback) {\r\n\t\t\treturn this.ifVersion(key, null, callback)\r\n\t\t},\r\n\r\n\t\tifVersion(key, version, callback) {\r\n\t\t\tif (!callback) {\r\n\t\t\t\treturn new Batch((operations, callback) => {\r\n\t\t\t\t\tlet promise = this.ifVersion(key, version, operations)\r\n\t\t\t\t\tif (callback)\r\n\t\t\t\t\t\tpromise.then(callback)\r\n\t\t\t\t\treturn promise\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (writeTxn) {\r\n\t\t\t\tif (this.doesExist(key, version)) {\r\n\t\t\t\t\tcallback()\r\n\t\t\t\t\treturn SYNC_PROMISE_SUCCESS\r\n\t\t\t\t}\r\n\t\t\t\treturn SYNC_PROMISE_FAIL\r\n\t\t\t}\r\n\t\t\tlet finishStartWrite = writeInstructions(typeof key === 'undefined' ? 1 : 4, this, key, undefined, undefined, version)\r\n\t\t\tlet promise\r\n\t\t\tbatchDepth += 2\r\n\t\t\tif (batchDepth > 2)\r\n\t\t\t\tpromise = finishStartWrite()\r\n\t\t\telse {\r\n\t\t\t\twriteBatchStart = () => {\r\n\t\t\t\t\tpromise = finishStartWrite()\r\n\t\t\t\t}\r\n\t\t\t\toutstandingBatchCount = 0\r\n\t\t\t}\r\n\t\t\t//console.warn('wrote start of ifVersion', this.path)\r\n\t\t\ttry {\r\n\t\t\t\tif (typeof callback === 'function') {\r\n\t\t\t\t\tcallback()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i = 0, l = callback.length; i < l; i++) {\r\n\t\t\t\t\t\tlet operation = callback[i]\r\n\t\t\t\t\t\tthis[operation.type](operation.key, operation.value)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\t//console.warn('writing end of ifVersion', this.path, (dynamicBytes.buffer.address + ((dynamicBytes.position + 1) << 3)).toString(16))\r\n\t\t\t\tif (!promise) {\r\n\t\t\t\t\tfinishBatch()\r\n\t\t\t\t\tbatchDepth -= 2\r\n\t\t\t\t\tpromise = finishStartWrite() // finish write once all the operations have been written (and it hasn't been written prematurely)\r\n\t\t\t\t\twriteBatchStart = null\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbatchDepth -= 2\r\n\t\t\t\t\tfinishBatch()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise\r\n\t\t},\r\n\t\tbatch(callbackOrOperations) {\r\n\t\t\treturn this.ifVersion(undefined, undefined, callbackOrOperations)\r\n\t\t},\r\n\t\tdrop(callback) {\r\n\t\t\treturn writeInstructions(1024 + 12, this, undefined, undefined, undefined, undefined)(callback)\r\n\t\t},\r\n\t\tclearAsync(callback) {\r\n\t\t\tif (this.encoder && this.encoder.structures)\r\n\t\t\t\tthis.encoder.structures = []\r\n\t\t\treturn writeInstructions(12, this, undefined, undefined, undefined, undefined)(callback)\r\n\t\t},\r\n\t\t_triggerError() {\r\n\t\t\tfinishBatch()\r\n\t\t},\r\n\r\n\t\tputSync(key, value, versionOrOptions, ifVersion) {\r\n\t\t\tif (writeTxn)\r\n\t\t\t\treturn this.put(key, value, versionOrOptions, ifVersion)\r\n\t\t\telse\r\n\t\t\t\treturn this.transactionSync(() =>\r\n\t\t\t\t\tthis.put(key, value, versionOrOptions, ifVersion) == SYNC_PROMISE_SUCCESS,\r\n\t\t\t\t\t{ abortable: false })\r\n\t\t},\r\n\t\tremoveSync(key, ifVersionOrValue) {\r\n\t\t\tif (writeTxn)\r\n\t\t\t\treturn this.remove(key, ifVersionOrValue)\r\n\t\t\telse\r\n\t\t\t\treturn this.transactionSync(() =>\r\n\t\t\t\t\tthis.remove(key, ifVersionOrValue) == SYNC_PROMISE_SUCCESS,\r\n\t\t\t\t\t{ abortable: false })\r\n\t\t},\r\n\t\ttransaction(callback) {\r\n\t\t\tif (writeTxn) {\r\n\t\t\t\t// already nested in a transaction, just execute and return\r\n\t\t\t\treturn callback()\r\n\t\t\t}\r\n\t\t\treturn this.transactionAsync(callback)\r\n\t\t},\r\n\t\tchildTransaction(callback) {\r\n\t\t\tif (useWritemap)\r\n\t\t\t\tthrow new Error('Child transactions are not supported in writemap mode')\r\n\t\t\tif (writeTxn) {\r\n\t\t\t\tenv.beginTxn(1) // abortable\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn when(callback(), (result) => {\r\n\t\t\t\t\t\tif (result === ABORT)\r\n\t\t\t\t\t\t\tenv.abortTxn()\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tenv.commitTxn()\r\n\t\t\t\t\t\treturn result\r\n\t\t\t\t\t}, (error) => {\r\n\t\t\t\t\t\tenv.abortTxn()\r\n\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t})\r\n\t\t\t\t} catch(error) {\r\n\t\t\t\t\tenv.abortTxn()\r\n\t\t\t\t\tthrow error\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.transactionAsync(callback, true)\r\n\t\t},\r\n\t\ttransactionAsync(callback, asChild) {\r\n\t\t\tlet txnIndex\r\n\t\t\tlet txnCallbacks\r\n\t\t\tif (!nextResolution.callbacks) {\r\n\t\t\t\ttxnCallbacks = [asChild ? { callback, asChild } : callback]\r\n\t\t\t\tnextResolution.callbacks = txnCallbacks\r\n\t\t\t\ttxnCallbacks.results = writeInstructions(8 | (this.strictAsyncOrder ? 0x100000 : 0), this)()\r\n\t\t\t\ttxnIndex = 0\r\n\t\t\t} else {\r\n\t\t\t\ttxnCallbacks = lastQueuedResolution.callbacks\r\n\t\t\t\ttxnIndex = txnCallbacks.push(asChild ? { callback, asChild } : callback) - 1\r\n\t\t\t}\r\n\t\t\treturn txnCallbacks.results.then((results) => {\r\n\t\t\t\tlet result = txnCallbacks[txnIndex]\r\n\t\t\t\tif (result === CALLBACK_THREW)\r\n\t\t\t\t\tthrow txnCallbacks.errors[txnIndex]\r\n\t\t\t\treturn result\r\n\t\t\t})\r\n\t\t},\r\n\t\ttransactionSync(callback, flags) {\r\n\t\t\tif (writeTxn) {\r\n\t\t\t\tif (!useWritemap && !this.cache)\r\n\t\t\t\t\t// already nested in a transaction, execute as child transaction (if possible) and return\r\n\t\t\t\t\treturn this.childTransaction(callback)\r\n\t\t\t\tlet result = callback() // else just run in current transaction\r\n\t\t\t\tif (result == ABORT && !abortedNonChildTransactionWarn) {\r\n\t\t\t\t\tconsole.warn('Can not abort a transaction inside another transaction with ' + (this.cache ? 'caching enabled' : 'useWritemap enabled'))\r\n\t\t\t\t\tabortedNonChildTransactionWarn = true\r\n\t\t\t\t}\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tthis.transactions++\r\n\t\t\t\tenv.beginTxn(flags == undefined ? 3 : flags)\r\n\t\t\t\twriteTxn = env.writeTxn = {}\r\n\t\t\t\treturn when(callback(), (result) => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (result === ABORT)\r\n\t\t\t\t\t\t\tenv.abortTxn()\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tenv.commitTxn()\r\n\t\t\t\t\t\t\tresetReadTxn()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tenv.writeTxn = writeTxn = null\r\n\t\t\t\t\t}\r\n\t\t\t\t}, (error) => {\r\n\t\t\t\t\ttry { env.abortTxn() } catch(e) {}\r\n\t\t\t\t\tenv.writeTxn = writeTxn = null\r\n\t\t\t\t\tthrow error\r\n\t\t\t\t})\r\n\t\t\t} catch(error) {\r\n\t\t\t\ttry { env.abortTxn() } catch(e) {}\r\n\t\t\t\tenv.writeTxn = writeTxn = null\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t},\r\n\t\ttransactionSyncStart(callback) {\r\n\t\t\treturn this.transactionSync(callback, 0)\r\n\t\t},\r\n\t\ton(event, callback) {\r\n\t\t\tif (event == 'beforecommit') {\r\n\t\t\t\teventTurnBatching = true\r\n\t\t\t\tbeforeCommitCallbacks.push(callback)\r\n\t\t\t} else if (event == 'aftercommit')\r\n\t\t\t\tafterCommitCallbacks.push(callback)\r\n\t\t}\r\n\t})\r\n\tLMDBStore.prototype.del = LMDBStore.prototype.remove\r\n}\r\n\r\nclass Batch extends Array {\r\n\tconstructor(callback) {\r\n\t\tsuper()\r\n\t\tthis.callback = callback\r\n\t}\r\n\tput(key, value) {\r\n\t\tthis.push({ type: 'put', key, value })\r\n\t}\r\n\tdel(key) {\r\n\t\tthis.push({ type: 'del', key })\r\n\t}\r\n\tclear() {\r\n\t\tthis.splice(0, this.length)\r\n\t}\r\n\twrite(callback) {\r\n\t\treturn this.callback(this, callback)\r\n\t}\r\n}\r\n","export function levelup(store) {\r\n\treturn Object.assign(Object.create(store), {\r\n\t\tget(key, options, callback) {\r\n\t\t\tlet result = store.get(key)\r\n\t\t\tif (typeof options == 'function')\r\n\t\t\t\tcallback = options\r\n\t\t\tif (callback) {\r\n\t\t\t\tif (result === undefined)\r\n\t\t\t\t\tcallback(new NotFoundError())\r\n\t\t\t\telse\r\n\t\t\t\t\tcallback(null, result)\r\n\t\t\t} else {\r\n\t\t\t\tif (result === undefined)\r\n\t\t\t\t\treturn Promise.reject(new NotFoundError())\r\n\t\t\t\telse\r\n\t\t\t\t\treturn Promise.resolve(result)\r\n\t\t\t}\r\n\t\t},\r\n\t})\r\n}\r\nclass NotFoundError extends Error {\r\n\tconstructor(message) {\r\n\t\tsuper(message)\r\n\t\tthis.name = 'NotFoundError'\r\n\t\tthis.notFound = true\r\n\t}\r\n}","import { WeakLRUCache } from 'weak-lru-cache/index.js'\r\nlet getLastVersion\r\nconst mapGet = Map.prototype.get\r\nexport const CachingStore = Store => class extends Store {\r\n\tconstructor(dbName, options) {\r\n\t\tsuper(dbName, options)\r\n\t\tif (!this.env.cacheCommitter) {\r\n\t\t\tthis.env.cacheCommitter = true\r\n\t\t\tthis.on('aftercommit', ({ next, last }) => {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tlet store = next.store\r\n\t\t\t\t\tif (store) {\r\n\t\t\t\t\t\tif (next.flag & 1)\r\n\t\t\t\t\t\t\tnext.store.cache.delete(next.key) // just delete it from the map\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tlet expirationPriority = next.valueSize >> 10\r\n\t\t\t\t\t\t\tlet cache = next.store.cache\r\n\t\t\t\t\t\t\tlet entry = mapGet.call(cache, next.key)\r\n\t\t\t\t\t\t\tif (entry)\r\n\t\t\t\t\t\t\t\tcache.used(entry, expirationPriority) // this will enter it into the LRFU\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} while (next != last && (next = next.next))\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.db.cachingDb = this\r\n\t\tthis.cache = new WeakLRUCache(options.cache)\r\n\t}\r\n\tget(id, cacheMode) {\r\n\t\tlet value = this.cache.getValue(id)\r\n\t\tif (value !== undefined)\r\n\t\t\treturn value\r\n\t\tvalue = super.get(id)\r\n\t\tif (value && typeof value === 'object' && !cacheMode && typeof id !== 'object') {\r\n\t\t\tlet entry = this.cache.setValue(id, value, this.lastSize >> 10)\r\n\t\t\tif (this.useVersions) {\r\n\t\t\t\tentry.version = getLastVersion()\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value\r\n\t}\r\n\tgetEntry(id, cacheMode) {\r\n\t\tlet entry = this.cache.get(id)\r\n\t\tif (entry)\r\n\t\t\treturn entry\r\n\t\tlet value = super.get(id)\r\n\t\tif (value === undefined)\r\n\t\t\treturn\r\n\t\tif (value && typeof value === 'object' && !cacheMode && typeof id !== 'object') {\r\n\t\t\tentry = this.cache.setValue(id, value, this.lastSize >> 10)\r\n\t\t} else {\r\n\t\t\tentry = { value }\r\n\t\t}\r\n\t\tif (this.useVersions) {\r\n\t\t\tentry.version = getLastVersion()\r\n\t\t}\r\n\t\treturn entry\r\n\t}\r\n\tputEntry(id, entry, ifVersion) {\r\n\t\tlet result = super.put(id, entry.value, entry.version, ifVersion)\r\n\t\tif (typeof id === 'object')\r\n\t\t\treturn result\r\n\t\tif (result && result.then)\r\n\t\t\tthis.cache.setManually(id, entry) // set manually so we can keep it pinned in memory until it is committed\r\n\t\telse // sync operation, immediately add to cache\r\n\t\t\tthis.cache.set(id, entry)\r\n\t}\r\n\tput(id, value, version, ifVersion) {\r\n\t\t// if (this.cache.get(id)) // if there is a cache entry, remove it from scheduledEntries and \r\n\t\tlet result = super.put(id, value, version, ifVersion)\r\n\t\tif (typeof id !== 'object') {\r\n\t\t\t// sync operation, immediately add to cache, otherwise keep it pinned in memory until it is committed\r\n\t\t\tlet entry = this.cache.setValue(id, value, !result || result.isSync ? 0 : -1)\r\n\t\t\tif (version !== undefined)\r\n\t\t\t\tentry.version = typeof version === 'object' ? version.version : version\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\tputSync(id, value, version, ifVersion) {\r\n\t\tif (id !== 'object') {\r\n\t\t\t// sync operation, immediately add to cache, otherwise keep it pinned in memory until it is committed\r\n\t\t\tif (value && typeof value === 'object') {\r\n\t\t\t\tlet entry = this.cache.setValue(id, value)\r\n\t\t\t\tif (version !== undefined) {\r\n\t\t\t\t\tentry.version = typeof version === 'object' ? version.version : version\r\n\t\t\t\t}\r\n\t\t\t} else // it is possible that  a value used to exist here\r\n\t\t\t\tthis.cache.delete(id)\r\n\t\t}\r\n\t\treturn super.putSync(id, value, version, ifVersion)\r\n\t}\r\n\tremove(id, ifVersion) {\r\n\t\tthis.cache.delete(id)\r\n\t\treturn super.remove(id, ifVersion)\r\n\t}\r\n\tremoveSync(id, ifVersion) {\r\n\t\tthis.cache.delete(id)\r\n\t\treturn super.removeSync(id, ifVersion)\r\n\t}\r\n\tclear() {\r\n\t\tthis.cache.clear()\r\n\t\tsuper.clear()\r\n\t}\r\n\tchildTransaction(execute) {\r\n\t\tthrow new Error('Child transactions are not supported in caching stores')\r\n\t}\r\n}\r\nexport function setGetLastVersion(get) {\r\n\tgetLastVersion = get\r\n}\r\n","const SKIP = {}\r\nif (!Symbol.asyncIterator) {\r\n\tSymbol.asyncIterator = Symbol.for('Symbol.asyncIterator')\r\n}\r\n\r\nexport class ArrayLikeIterable {\r\n\tconstructor(sourceArray) {\r\n\t\tif (sourceArray) {\r\n\t\t\tthis[Symbol.iterator] = sourceArray[Symbol.iterator].bind(sourceArray)\r\n\t\t}\r\n\t}\r\n\tmap(func) {\r\n\t\tlet source = this\r\n\t\tlet result = new ArrayLikeIterable()\r\n\t\tresult[Symbol.iterator] = (async) => {\r\n\t\t\tlet iterator = source[Symbol.iterator](async)\r\n\t\t\treturn {\r\n\t\t\t\tnext(resolvedResult) {\r\n\t\t\t\t\tlet result\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tlet iteratorResult\r\n\t\t\t\t\t\tif (resolvedResult) {\r\n\t\t\t\t\t\t\titeratorResult = resolvedResult\r\n\t\t\t\t\t\t\tresolvedResult = null // don't go in this branch on next iteration\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\titeratorResult = iterator.next()\r\n\t\t\t\t\t\t\tif (iteratorResult.then) {\r\n\t\t\t\t\t\t\t\treturn iteratorResult.then(iteratorResult => this.next(iteratorResult))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (iteratorResult.done === true) {\r\n\t\t\t\t\t\t\tthis.done = true\r\n\t\t\t\t\t\t\treturn iteratorResult\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult = func(iteratorResult.value)\r\n\t\t\t\t\t\tif (result && result.then) {\r\n\t\t\t\t\t\t\treturn result.then(result =>\r\n\t\t\t\t\t\t\t\tresult == SKIP ?\r\n\t\t\t\t\t\t\t\t\tthis.next() :\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tvalue: result\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} while(result == SKIP)\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: result\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\treturn() {\r\n\t\t\t\t\treturn iterator.return()\r\n\t\t\t\t},\r\n\t\t\t\tthrow() {\r\n\t\t\t\t\treturn iterator.throw()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\t[Symbol.asyncIterator]() {\r\n\t\treturn this[Symbol.iterator](true)\r\n\t}\r\n\tfilter(func) {\r\n\t\treturn this.map(element => func(element) ? element : SKIP)\r\n\t}\r\n\r\n\tforEach(callback) {\r\n\t\tlet iterator = this[Symbol.iterator]()\r\n\t\tlet result\r\n\t\twhile ((result = iterator.next()).done !== true) {\r\n\t\t\tcallback(result.value)\r\n\t\t}\r\n\t}\r\n\tconcat(secondIterable) {\r\n\t\tlet concatIterable = new ArrayLikeIterable()\r\n\t\tconcatIterable[Symbol.iterator] = (async) => {\r\n\t\t\tlet iterator = this[Symbol.iterator]()\r\n\t\t\tlet isFirst = true\r\n\t\t\tlet concatIterator = {\r\n\t\t\t\tnext() {\r\n\t\t\t\t\tlet result = iterator.next()\r\n\t\t\t\t\tif (isFirst && result.done) {\r\n\t\t\t\t\t\tisFirst = false\r\n\t\t\t\t\t\titerator = secondIterable[Symbol.iterator](async)\r\n\t\t\t\t\t\treturn iterator.next()\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result\r\n\t\t\t\t},\r\n\t\t\t\treturn() {\r\n\t\t\t\t\treturn iterator.return()\r\n\t\t\t\t},\r\n\t\t\t\tthrow() {\r\n\t\t\t\t\treturn iterator.throw()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn concatIterator\r\n\t\t}\r\n\t\treturn concatIterable\r\n\t}\r\n\ttoJSON() {\r\n\t\tif (this.asArray && this.asArray.forEach) {\r\n\t\t\treturn this.asArray\r\n\t\t}\r\n\t\tthrow new Error('Can not serialize async iteratables without first calling resolveJSON')\r\n\t\t//return Array.from(this)\r\n\t}\r\n\tget asArray() {\r\n\t\tif (this._asArray)\r\n\t\t\treturn this._asArray\r\n\t\tlet promise = new Promise((resolve, reject) => {\r\n\t\t\tlet iterator = this[Symbol.iterator](true)\r\n\t\t\tlet array = []\r\n\t\t\tlet iterable = this\r\n\t\t\tfunction next(result) {\r\n\t\t\t\twhile (result.done !== true) {\r\n\t\t\t\t\tif (result.then) {\r\n\t\t\t\t\t\treturn result.then(next)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tarray.push(result.value)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult = iterator.next()\r\n\t\t\t\t}\r\n\t\t\t\tarray.iterable = iterable\r\n\t\t\t\tresolve(iterable._asArray = array)\r\n\t\t\t}\r\n\t\t\tnext(iterator.next())\r\n\t\t})\r\n\t\tpromise.iterable = this\r\n\t\treturn this._asArray || (this._asArray = promise)\r\n\t}\r\n\tresolveData() {\r\n\t\treturn this.asArray\r\n\t}\r\n}\r\n","import { getAddress } from './native.js'\r\nimport { writeKey, readKey, enableNullTermination } from 'ordered-binary/index.js'\r\nenableNullTermination()\r\n\r\nconst writeUint32Key = (key, target, start) => {\r\n\t(target.dataView || (target.dataView = new DataView(target.buffer, 0, target.length))).setUint32(start, key, true)\r\n\treturn start + 4\r\n}\r\nconst readUint32Key = (target, start) => {\r\n\treturn (target.dataView || (target.dataView = new DataView(target.buffer, 0, target.length))).getUint32(start, true)\r\n}\r\nconst writeBufferKey = (key, target, start) => {\r\n\tif (key.length > 1978)\r\n\t\tthrow new Error('Key buffer is too long')\r\n\ttarget.set(key, start)\r\n\treturn key.length + start\r\n}\r\nconst readBufferKey = (target, start, end) => {\r\n\treturn Uint8ArraySlice.call(target, start, end)\r\n}\r\n\r\nexport function applyKeyHandling(store) {\r\n \tif (store.encoding == 'ordered-binary') {\r\n\t\tstore.encoder = store.decoder = {\r\n\t\t\twriteKey,\r\n\t\t\treadKey,\r\n\t\t}\r\n\t}\r\n\tif (store.encoder && store.encoder.writeKey && !store.encoder.encode) {\r\n\t\tstore.encoder.encode = function(value) {\r\n\t\t\tif (savePosition > 6200)\r\n\t\t\t\tallocateSaveBuffer()\r\n\t\t\tlet start = savePosition\r\n\t\t\tsavePosition = writeKey(value, saveBuffer, start)\r\n\t\t\tsaveBuffer.start = start\r\n\t\t\tsaveBuffer.end = savePosition\r\n\t\t\tsavePosition = (savePosition + 7) & 0xfffff8\r\n\t\t\treturn saveBuffer\r\n\t\t}\r\n\t}\r\n\tif (store.decoder && store.decoder.readKey && !store.decoder.decode)\r\n\t\tstore.decoder.decode = function(buffer, end) { return this.readKey(buffer, 0, end) }\r\n\tif (store.keyIsUint32) {\r\n\t\tstore.writeKey = writeUint32Key\r\n\t\tstore.readKey = readUint32Key\r\n\t} else if (store.keyIsBuffer) {\r\n\t\tstore.writeKey = writeBufferKey\r\n\t\tstore.readKey = readBufferKey\r\n\t} else if (store.keyEncoder) {\r\n\t\tstore.writeKey = store.keyEncoder.writeKey\r\n\t\tstore.readKey = store.keyEncoder.readKey\r\n\t} else {\r\n\t\tstore.writeKey = writeKey\r\n\t\tstore.readKey = readKey\r\n\t}\r\n}\r\n\r\nlet saveBuffer, saveDataView, saveDataAddress\r\nlet savePosition = 8000\r\nfunction allocateSaveBuffer() {\r\n\tsaveBuffer = Buffer.alloc(8192)\r\n\tsaveBuffer.dataView = saveDataView = new DataView(saveBuffer.buffer, saveBuffer.byteOffset, saveBuffer.byteLength)\r\n\tsaveBuffer.buffer.address = getAddress(saveBuffer.buffer)\r\n\tsaveDataAddress = saveBuffer.buffer.address + saveBuffer.byteOffset\r\n\tsavePosition = 0\r\n\r\n}\r\nexport function saveKey(key, writeKey, saveTo) {\r\n\tif (savePosition > 6200) {\r\n\t\tallocateSaveBuffer()\r\n\t}\r\n\tlet start = savePosition\r\n\tsavePosition = writeKey(key, saveBuffer, start + 4)\r\n\tsaveDataView.setUint32(start, savePosition - start - 4, true)\r\n\tsaveTo.saveBuffer = saveBuffer\r\n\tsavePosition = (savePosition + 7) & 0xfffff8\r\n\treturn start + saveDataAddress\r\n}\r\n","import { ArrayLikeIterable }  from './util/ArrayLikeIterable.js'\r\nimport { getAddress, Cursor }  from './native.js'\r\nimport { saveKey }  from './keys.js'\r\nimport { writeKey }  from 'ordered-binary/index.js'\r\nconst ITERATOR_DONE = { done: true, value: undefined }\r\n\r\nexport function addQueryMethods(LMDBStore, {\r\n\tgetReadTxn, env, keyBytes, keyBytesView, getLastVersion\r\n}) {\r\n\tlet renewId = 1\r\n\tLMDBStore.onReadReset = () => renewId++\r\n\tlet get = LMDBStore.prototype.get\r\n\tObject.assign(LMDBStore.prototype, {\r\n\t\tgetValues(key, options) {\r\n\t\t\tlet defaultOptions = {\r\n\t\t\t\tkey,\r\n\t\t\t\tvaluesForKey: true\r\n\t\t\t}\r\n\t\t\tif (options && options.snapshot === false)\r\n\t\t\t\tthrow new Error('Can not disable snapshots for getValues')\r\n\t\t\treturn this.getRange(options ? Object.assign(defaultOptions, options) : defaultOptions)\r\n\t\t},\r\n\t\tgetKeys(options) {\r\n\t\t\tif (!options)\r\n\t\t\t\toptions = {}\r\n\t\t\toptions.values = false\r\n\t\t\treturn this.getRange(options)\r\n\t\t},\r\n\t\tgetCount(options) {\r\n\t\t\tif (!options)\r\n\t\t\t\toptions = {}\r\n\t\t\toptions.onlyCount = true\r\n\t\t\treturn this.getRange(options)[Symbol.iterator]()\r\n\t\t},\r\n\t\tgetKeysCount(options) {\r\n\t\t\tif (!options)\r\n\t\t\t\toptions = {}\r\n\t\t\toptions.onlyCount = true\r\n\t\t\toptions.values = false\r\n\t\t\treturn this.getRange(options)[Symbol.iterator]()\r\n\t\t},\r\n\t\tgetValuesCount(key, options) {\r\n\t\t\tif (!options)\r\n\t\t\t\toptions = {}\r\n\t\t\toptions.key = key\r\n\t\t\toptions.valuesForKey = true\r\n\t\t\toptions.onlyCount = true\r\n\t\t\treturn this.getRange(options)[Symbol.iterator]()\r\n\t\t},\r\n\t\tgetRange(options) {\r\n\t\t\tlet iterable = new ArrayLikeIterable()\r\n\t\t\tif (!options)\r\n\t\t\t\toptions = {}\r\n\t\t\tlet includeValues = options.values !== false\r\n\t\t\tlet includeVersions = options.versions\r\n\t\t\tlet valuesForKey = options.valuesForKey\r\n\t\t\tlet limit = options.limit\r\n\t\t\tlet db = this.db\r\n\t\t\tlet snapshot = options.snapshot\r\n\t\t\titerable[Symbol.iterator] = () => {\r\n\t\t\t\tlet currentKey = valuesForKey ? options.key : options.start\r\n\t\t\t\tconst reverse = options.reverse\r\n\t\t\t\tlet count = 0\r\n\t\t\t\tlet cursor, cursorRenewId\r\n\t\t\t\tlet txn\r\n\t\t\t\tlet flags = (includeValues ? 0x100 : 0) | (reverse ? 0x400 : 0) |\r\n\t\t\t\t\t(valuesForKey ? 0x800 : 0) | (options.exactMatch ? 0x4000 : 0)\r\n\t\t\t\tfunction resetCursor() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif (cursor)\r\n\t\t\t\t\t\t\tfinishCursor()\r\n\t\t\t\t\t\tlet writeTxn = env.writeTxn\r\n\t\t\t\t\t\ttxn = writeTxn || getReadTxn()\r\n\t\t\t\t\t\tcursor = !writeTxn && db.availableCursor\r\n\t\t\t\t\t\tif (cursor) {\r\n\t\t\t\t\t\t\tdb.availableCursor = null\r\n\t\t\t\t\t\t\tif (db.cursorTxn != txn)\r\n\t\t\t\t\t\t\t\tcursor.renew()\r\n\t\t\t\t\t\t\telse// if (db.currentRenewId != renewId)\r\n\t\t\t\t\t\t\t\tflags |= 0x2000\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcursor = new Cursor(db)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttxn.cursorCount = (txn.cursorCount || 0) + 1 // track transaction so we always use the same one\r\n\t\t\t\t\t\tif (snapshot === false) {\r\n\t\t\t\t\t\t\tcursorRenewId = renewId // use shared read transaction\r\n\t\t\t\t\t\t\ttxn.renewingCursorCount = (txn.renewingCursorCount || 0) + 1 // need to know how many are renewing cursors\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\tif (cursor) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tcursor.close()\r\n\t\t\t\t\t\t\t} catch(error) { }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresetCursor()\r\n\t\t\t\tlet store = this\r\n\t\t\t\tif (options.onlyCount) {\r\n\t\t\t\t\tflags |= 0x1000\r\n\t\t\t\t\tlet count = position(options.offset)\r\n\t\t\t\t\tfinishCursor()\r\n\t\t\t\t\treturn count\r\n\t\t\t\t}\r\n\t\t\t\tfunction position(offset) {\r\n\t\t\t\t\tlet keySize = store.writeKey(currentKey, keyBytes, 0)\r\n\t\t\t\t\tlet endAddress\r\n\t\t\t\t\tif (valuesForKey) {\r\n\t\t\t\t\t\tif (options.start === undefined && options.end === undefined)\r\n\t\t\t\t\t\t\tendAddress = 0\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tlet startAddress\r\n\t\t\t\t\t\t\tif (store.encoder.writeKey) {\r\n\t\t\t\t\t\t\t\tstartAddress = saveKey(options.start, store.encoder.writeKey, iterable)\r\n\t\t\t\t\t\t\t\tkeyBytesView.setFloat64(2000, startAddress, true)\r\n\t\t\t\t\t\t\t\tendAddress = saveKey(options.end, store.encoder.writeKey, iterable)\r\n\t\t\t\t\t\t\t} else if ((!options.start || options.start instanceof Uint8Array) && (!options.end || options.end instanceof Uint8Array)) {\r\n\t\t\t\t\t\t\t\tstartAddress = saveKey(options.start, writeKey, iterable)\r\n\t\t\t\t\t\t\t\tkeyBytesView.setFloat64(2000, startAddress, true)\r\n\t\t\t\t\t\t\t\tendAddress = saveKey(options.end, writeKey, iterable)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthrow new Error('Only key-based encoding is supported for start/end values')\r\n\t\t\t\t\t\t\t\tlet encoded = store.encoder.encode(options.start)\r\n\t\t\t\t\t\t\t\tlet bufferAddress = encoded.buffer.address || (encoded.buffer.address = getAddress(encoded) - encoded.byteOffset)\r\n\t\t\t\t\t\t\t\tstartAddress = bufferAddress + encoded.byteOffset\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else\r\n\t\t\t\t\t\tendAddress = saveKey(options.end, store.writeKey, iterable)\r\n\t\t\t\t\treturn cursor.position(flags, offset || 0, keySize, endAddress)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction finishCursor() {\r\n\t\t\t\t\tif (txn.isAborted)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\tif (cursorRenewId)\r\n\t\t\t\t\t\ttxn.renewingCursorCount--\r\n\t\t\t\t\tif (--txn.cursorCount <= 0 && txn.onlyCursor) {\r\n\t\t\t\t\t\tcursor.close()\r\n\t\t\t\t\t\ttxn.abort() // this is no longer main read txn, abort it now that we are done\r\n\t\t\t\t\t\ttxn.isAborted = true\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (db.availableCursor || txn != getReadTxn())\r\n\t\t\t\t\t\t\tcursor.close()\r\n\t\t\t\t\t\telse { // try to reuse it\r\n\t\t\t\t\t\t\tdb.availableCursor = cursor\r\n\t\t\t\t\t\t\tdb.cursorTxn = txn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tnext() {\r\n\t\t\t\t\t\tlet keySize, lastSize\r\n\t\t\t\t\t\tif (cursorRenewId && cursorRenewId != renewId) {\r\n\t\t\t\t\t\t\tresetCursor()\r\n\t\t\t\t\t\t\tkeySize = position(0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (count === 0) { // && includeValues) // on first entry, get current value if we need to\r\n\t\t\t\t\t\t\tkeySize = position(options.offset)\r\n\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\tkeySize = cursor.iterate()\r\n\t\t\t\t\t\tif (keySize === 0 ||\r\n\t\t\t\t\t\t\t\t(count++ >= limit)) {\r\n\t\t\t\t\t\t\tfinishCursor()\r\n\t\t\t\t\t\t\treturn ITERATOR_DONE\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!valuesForKey || snapshot === false)\r\n\t\t\t\t\t\t\tcurrentKey = store.readKey(keyBytes, 32, keySize + 32)\r\n\t\t\t\t\t\tif (includeValues) {\r\n\t\t\t\t\t\t\tlet value\r\n\t\t\t\t\t\t\tlastSize = keyBytesView.getUint32(0, true)\r\n\t\t\t\t\t\t\tif (store.decoder) {\r\n\t\t\t\t\t\t\t\tvalue = store.decoder.decode(db.unsafeBuffer, lastSize)\r\n\t\t\t\t\t\t\t} else if (store.encoding == 'binary')\r\n\t\t\t\t\t\t\t\tvalue = Uint8ArraySlice.call(db.unsafeBuffer, 0, lastSize)\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvalue = store.db.unsafeBuffer.toString('utf8', 0, lastSize)\r\n\t\t\t\t\t\t\t\tif (store.encoding == 'json' && value)\r\n\t\t\t\t\t\t\t\t\tvalue = JSON.parse(value)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (includeVersions)\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\tkey: currentKey,\r\n\t\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t\t\tversion: getLastVersion()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\telse if (valuesForKey)\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tvalue\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\t\tkey: currentKey,\r\n\t\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (includeVersions) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\tkey: currentKey,\r\n\t\t\t\t\t\t\t\t\tversion: getLastVersion()\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tvalue: currentKey\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\treturn() {\r\n\t\t\t\t\t\tfinishCursor()\r\n\t\t\t\t\t\treturn ITERATOR_DONE\r\n\t\t\t\t\t},\r\n\t\t\t\t\tthrow() {\r\n\t\t\t\t\t\tfinishCursor()\r\n\t\t\t\t\t\treturn ITERATOR_DONE\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn iterable\r\n\t\t},\r\n\t\tgetMany(keys, callback) {\r\n\t\t\tlet results = new Array(keys.length)\r\n\t\t\tfor (let i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\tresults[i] = get.call(this, keys[i])\r\n\t\t\t}\r\n\t\t\tif (callback)\r\n\t\t\t\tcallback(null, results)\r\n\t\t\treturn Promise.resolve(results) // we may eventually make this a true async operation\r\n\t\t}\r\n\r\n\t})\r\n}\r\n","import { extname, basename, dirname} from 'path'\r\nimport EventEmitter from 'events'\r\nimport { Env, Compression, getAddress, require, arch, fs } from './native.js'\r\nimport { CachingStore, setGetLastVersion } from './caching.js'\r\nimport { addQueryMethods } from './query.js'\r\nimport { addWriteMethods } from './writer.js'\r\nimport { applyKeyHandling } from './keys.js'\r\nimport { Encoder as MsgpackrEncoder } from 'msgpackr'\r\nconst binaryBuffer = Symbol('binaryBuffer')\r\nsetGetLastVersion(getLastVersion)\r\nconst Uint8ArraySlice = Uint8Array.prototype.slice\r\nlet keyBytes, keyBytesView\r\nconst buffers = []\r\n\r\nconst DEFAULT_SYNC_BATCH_THRESHOLD = 200000000 // 200MB\r\nconst DEFAULT_IMMEDIATE_BATCH_THRESHOLD = 10000000 // 10MB\r\nconst DEFAULT_COMMIT_DELAY = 0\r\nconst READING_TNX = {\r\n\treadOnly: true\r\n}\r\n\r\nexport const allDbs = new Map()\r\nconst SYNC_PROMISE_RESULT = Promise.resolve(true)\r\nconst SYNC_PROMISE_FAIL = Promise.resolve(false)\r\nSYNC_PROMISE_RESULT.isSync = true\r\nSYNC_PROMISE_FAIL.isSync = true\r\n\r\nlet env\r\nlet defaultCompression\r\nlet lastSize, lastOffset, lastVersion\r\nconst MDB_SET_KEY = 0, MDB_SET_RANGE = 1, MDB_GET_BOTH_RANGE = 2, MDB_GET_CURRENT = 3, MDB_FIRST = 4, MDB_LAST = 5, MDB_NEXT = 6, MDB_NEXT_NODUP = 7, MDB_NEXT_DUP = 8, MDB_PREV = 9, MDB_PREV_NODUP = 10, MDB_PREV_DUP = 11\r\nlet abortedNonChildTransactionWarn\r\nexport function open(path, options) {\r\n\tif (!keyBytes)\r\n\t\tallocateFixedBuffer()\r\n\tlet env = new Env()\r\n\tlet committingWrites\r\n\tlet scheduledTransactions\r\n\tlet scheduledOperations\r\n\tlet asyncTransactionAfter = true, asyncTransactionStrictOrder\r\n\tlet transactionWarned\r\n\tlet readTxn, writeTxn, pendingBatch, currentCommit, runNextBatch, readTxnRenewed\r\n\tif (typeof path == 'object' && !options) {\r\n\t\toptions = path\r\n\t\tpath = options.path\r\n\t}\r\n\tlet extension = extname(path)\r\n\tlet name = basename(path, extension)\r\n\tlet is32Bit = arch().endsWith('32')\r\n\tlet remapChunks = (options && options.remapChunks) || ((options && options.mapSize) ?\r\n\t\t(is32Bit && options.mapSize > 0x100000000) : // larger than fits in address space, must use dynamic maps\r\n\t\tis32Bit) // without a known map size, we default to being able to handle large data correctly/well*/\r\n\toptions = Object.assign({\r\n\t\tpath,\r\n\t\tnoSubdir: Boolean(extension),\r\n\t\tisRoot: true,\r\n\t\tmaxDbs: 12,\r\n\t\tremapChunks,\r\n\t\tkeyBytes,\r\n\t\t//overlappingSync: true,\r\n\t\t// default map size limit of 4 exabytes when using remapChunks, since it is not preallocated and we can\r\n\t\t// make it super huge.\r\n\t\tmapSize: remapChunks ? 0x10000000000000 :\r\n\t\t\t0x20000, // Otherwise we start small with 128KB\r\n\t}, options)\r\n\tif (options.asyncTransactionOrder == 'before') {\r\n\t\tconsole.warn('asyncTransactionOrder: \"before\" is deprecated')\r\n\t\tasyncTransactionAfter = false\r\n\t} else if (options.asyncTransactionOrder == 'strict') {\r\n\t\tasyncTransactionStrictOrder = true\r\n\t\tasyncTransactionAfter = false\r\n\t}\r\n\tif (!fs.existsSync(options.noSubdir ? dirname(path) : path))\r\n\t\tfs.mkdirSync(options.noSubdir ? dirname(path) : path, { recursive: true })\r\n\tif (options.compression) {\r\n\t\tlet setDefault\r\n\t\tif (options.compression == true) {\r\n\t\t\tif (defaultCompression)\r\n\t\t\t\toptions.compression = defaultCompression\r\n\t\t\telse\r\n\t\t\t\tdefaultCompression = options.compression = new Compression({\r\n\t\t\t\t\tthreshold: 1000,\r\n\t\t\t\t\tdictionary: fs.readFileSync(new URL('./dict/dict.txt', import.meta.url.replace(/dist[\\\\\\/]index.cjs$/, ''))),\r\n\t\t\t\t})\r\n\t\t\t\tdefaultCompression.threshold = 1000\r\n\t\t} else {\r\n\t\t\tlet compressionOptions = Object.assign({\r\n\t\t\t\tthreshold: 1000,\r\n\t\t\t\tdictionary: fs.readFileSync(new URL('./dict/dict.txt', import.meta.url.replace(/dist[\\\\\\/]index.cjs$/, ''))),\r\n\t\t\t}, options.compression)\r\n\t\t\toptions.compression = new Compression(compressionOptions)\r\n\t\t\toptions.compression.threshold = compressionOptions.threshold\r\n\t\t}\r\n\t}\r\n\r\n\tif (options && options.clearOnStart) {\r\n\t\tconsole.info('Removing', path)\r\n\t\tfs.removeSync(path)\r\n\t\tconsole.info('Removed', path)\r\n\t}\r\n\tenv.open(options)\r\n\tenv.readerCheck() // clear out any stale entries\r\n\tfunction renewReadTxn() {\r\n\t\tif (readTxn)\r\n\t\t\treadTxn.renew()\r\n\t\telse\r\n\t\t\treadTxn = env.beginTxn(0x20000)\r\n\t\treadTxnRenewed = setImmediate(resetReadTxn)\r\n\t\treturn readTxn\r\n\t}\r\n\tfunction resetReadTxn() {\r\n\t\tif (readTxnRenewed) {\r\n\t\t\tLMDBStore.onReadReset()\r\n\t\t\treadTxnRenewed = null\r\n\t\t\tif (readTxn.cursorCount - (readTxn.renewingCursorCount || 0) > 0) {\r\n\t\t\t\treadTxn.onlyCursor = true\r\n\t\t\t\treadTxn = null\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treadTxn.reset()\r\n\t\t}\r\n\t}\r\n\tlet stores = []\r\n\tclass LMDBStore extends EventEmitter {\r\n\t\tconstructor(dbName, dbOptions) {\r\n\t\t\tsuper()\r\n\t\t\tif (dbName === undefined)\r\n\t\t\t\tthrow new Error('Database name must be supplied in name property (may be null for root database)')\r\n\r\n\t\t\tconst openDB = () => {\r\n\t\t\t\tthis.db = env.openDbi(Object.assign({\r\n\t\t\t\t\tname: dbName,\r\n\t\t\t\t\tcreate: true,\r\n\t\t\t\t\ttxn: env.writeTxn,\r\n\t\t\t\t}, dbOptions))\r\n\t\t\t\tthis.db.name = dbName || null\r\n\t\t\t}\r\n\t\t\tif (dbOptions.compression && !(dbOptions.compression instanceof Compression)) {\r\n\t\t\t\tif (dbOptions.compression == true && options.compression)\r\n\t\t\t\t\tdbOptions.compression = options.compression // use the parent compression if available\r\n\t\t\t\telse\r\n\t\t\t\t\tdbOptions.compression = new Compression(Object.assign({\r\n\t\t\t\t\t\tthreshold: 1000,\r\n\t\t\t\t\t\tdictionary: fs.readFileSync(require.resolve('./dict/dict.txt')),\r\n\t\t\t\t\t}), dbOptions.compression)\r\n\t\t\t}\r\n\r\n\t\t\tif (dbOptions.dupSort && (dbOptions.useVersions || dbOptions.cache)) {\r\n\t\t\t\tthrow new Error('The dupSort flag can not be combined with versions or caching')\r\n\t\t\t}\r\n\t\t\topenDB()\r\n\t\t\tresetReadTxn() // a read transaction becomes invalid after opening another db\r\n\t\t\tthis.name = dbName\r\n\t\t\tthis.status = 'open'\r\n\t\t\tthis.env = env\r\n\t\t\tthis.reads = 0\r\n\t\t\tthis.writes = 0\r\n\t\t\tthis.transactions = 0\r\n\t\t\tthis.averageTransactionTime = 5\r\n\t\t\tif (dbOptions.syncBatchThreshold)\r\n\t\t\t\tconsole.warn('syncBatchThreshold is no longer supported')\r\n\t\t\tif (dbOptions.immediateBatchThreshold)\r\n\t\t\t\tconsole.warn('immediateBatchThreshold is no longer supported')\r\n\t\t\tthis.commitDelay = DEFAULT_COMMIT_DELAY\r\n\t\t\tObject.assign(this, { // these are the options that are inherited\r\n\t\t\t\tpath: options.path,\r\n\t\t\t\tencoding: options.encoding,\r\n\t\t\t\tstrictAsyncOrder: options.strictAsyncOrder,\r\n\t\t\t}, dbOptions)\r\n\t\t\tif (!this.encoding || this.encoding == 'msgpack' || this.encoding == 'cbor') {\r\n\t\t\t\tthis.encoder = this.decoder = new (this.encoding == 'cbor' ? require('cbor-x').Encoder : MsgpackrEncoder)\r\n\t\t\t\t\t(Object.assign(this.sharedStructuresKey ?\r\n\t\t\t\t\tthis.setupSharedStructures() : {\r\n\t\t\t\t\t\tcopyBuffers: true, // need to copy any embedded buffers that are found since we use unsafe buffers\r\n\t\t\t\t\t}, options, dbOptions))\r\n\t\t\t} else if (this.encoding == 'json') {\r\n\t\t\t\tthis.encoder = {\r\n\t\t\t\t\tencode: JSON.stringify,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tapplyKeyHandling(this)\r\n\t\t\tallDbs.set(dbName ? name + '-' + dbName : name, this)\r\n\t\t\tstores.push(this)\r\n\t\t}\r\n\t\topenDB(dbName, dbOptions) {\r\n\t\t\tif (typeof dbName == 'object' && !dbOptions) {\r\n\t\t\t\tdbOptions = dbName\r\n\t\t\t\tdbName = options.name\r\n\t\t\t} else\r\n\t\t\t\tdbOptions = dbOptions || {}\r\n\t\t\ttry {\r\n\t\t\t\treturn dbOptions.cache ?\r\n\t\t\t\t\tnew (CachingStore(LMDBStore))(dbName, dbOptions) :\r\n\t\t\t\t\tnew LMDBStore(dbName, dbOptions)\r\n\t\t\t} catch(error) {\r\n\t\t\t\tif (error.message.indexOf('MDB_DBS_FULL') > -1) {\r\n\t\t\t\t\terror.message += ' (increase your maxDbs option)'\r\n\t\t\t\t}\r\n\t\t\t\tthrow error\r\n\t\t\t}\r\n\t\t}\r\n\t\topen(dbOptions, callback) {\r\n\t\t\tlet db = this.openDB(dbOptions)\r\n\t\t\tif (callback)\r\n\t\t\t\tcallback(null, db)\r\n\t\t\treturn db\r\n\t\t}\r\n\t\ttransactionAsync(callback, asChild) {\r\n\t\t\tlet lastOperation\r\n\t\t\tlet after, strictOrder\r\n\t\t\tif (scheduledOperations) {\r\n\t\t\t\tlastOperation = asyncTransactionAfter ? scheduledOperations.appendAsyncTxn :\r\n\t\t\t\t\tscheduledOperations[asyncTransactionStrictOrder ? scheduledOperations.length - 1 : 0]\r\n\t\t\t} else {\r\n\t\t\t\tscheduledOperations = []\r\n\t\t\t\tscheduledOperations.bytes = 0\r\n\t\t\t}\r\n\t\t\tlet transactionSet\r\n\t\t\tlet transactionSetIndex\r\n\t\t\tif (lastOperation === true) { // continue last set of transactions\r\n\t\t\t\ttransactionSetIndex = scheduledTransactions.length - 1\r\n\t\t\t\ttransactionSet = scheduledTransactions[transactionSetIndex]\r\n\t\t\t} else {\r\n\t\t\t\t// for now we signify transactions as a true\r\n\t\t\t\tif (asyncTransactionAfter) // by default we add a flag to put transactions after other operations\r\n\t\t\t\t\tscheduledOperations.appendAsyncTxn = true\r\n\t\t\t\telse if (asyncTransactionStrictOrder)\r\n\t\t\t\t\tscheduledOperations.push(true)\r\n\t\t\t\telse // in before mode, we put all the async transaction at the beginning\r\n\t\t\t\t\tscheduledOperations.unshift(true)\r\n\t\t\t\tif (!scheduledTransactions) {\r\n\t\t\t\t\tscheduledTransactions = []\r\n\t\t\t\t}\r\n\t\t\t\ttransactionSetIndex = scheduledTransactions.push(transactionSet = []) - 1\r\n\t\t\t}\r\n\t\t\tlet index = (transactionSet.push(asChild ?\r\n\t\t\t\t{asChild, callback } : callback) - 1) << 1\r\n\t\t\treturn this.scheduleCommit().results.then((results) => {\r\n\t\t\t\tlet transactionResults = results.transactionResults[transactionSetIndex]\r\n\t\t\t\tlet error = transactionResults[index]\r\n\t\t\t\tif (error)\r\n\t\t\t\t\tthrow error\r\n\t\t\t\treturn transactionResults[index + 1]\r\n\t\t\t})\r\n\t\t}\r\n\t\tgetSharedBufferForGet(id) {\r\n\t\t\tlet txn = (writeTxn || (readTxnRenewed ? readTxn : renewReadTxn()))\r\n\t\t\tlastSize = this.keyIsCompatibility ? txn.getBinaryShared(id) : this.db.get(this.writeKey(id, keyBytes, 0))\r\n\t\t\tif (lastSize === 0xffffffff) { // not found code\r\n\t\t\t\treturn //undefined\r\n\t\t\t}\r\n\t\t\treturn lastSize\r\n\t\t\tlastSize = keyBytesView.getUint32(0, true)\r\n\t\t\tlet bufferIndex = keyBytesView.getUint32(12, true)\r\n\t\t\tlastOffset = keyBytesView.getUint32(8, true)\r\n\t\t\tlet buffer = buffers[bufferIndex]\r\n\t\t\tlet startOffset\r\n\t\t\tif (!buffer || lastOffset < (startOffset = buffer.startOffset) || (lastOffset + lastSize > startOffset + 0x100000000)) {\r\n\t\t\t\tif (buffer)\r\n\t\t\t\t\tenv.detachBuffer(buffer.buffer)\r\n\t\t\t\tstartOffset = (lastOffset >>> 16) * 0x10000\r\n\t\t\t\tconsole.log('make buffer for address', bufferIndex * 0x100000000 + startOffset)\r\n\t\t\t\tbuffer = buffers[bufferIndex] = Buffer.from(getBufferForAddress(bufferIndex * 0x100000000 + startOffset))\r\n\t\t\t\tbuffer.startOffset = startOffset\r\n\t\t\t}\r\n\t\t\tlastOffset -= startOffset\r\n\t\t\treturn buffer\r\n\t\t\treturn buffer.slice(lastOffset, lastOffset + lastSize)/*Uint8ArraySlice.call(buffer, lastOffset, lastOffset + lastSize)*/\r\n\t\t}\r\n\r\n\t\tgetSizeBinaryFast(id) {\r\n\t\t\t(env.writeTxn || (readTxnRenewed ? readTxn : renewReadTxn()))\r\n\t\t\tlastSize = this.db.getByBinary(this.writeKey(id, keyBytes, 0))\r\n\t\t}\r\n\t\tgetString(id) {\r\n\t\t\t(env.writeTxn || (readTxnRenewed ? readTxn : renewReadTxn()))\r\n\t\t\tlet string = this.db.getStringByBinary(this.writeKey(id, keyBytes, 0))\r\n\t\t\tif (string)\r\n\t\t\t\tlastSize = string.length\r\n\t\t\treturn string\r\n\t\t}\r\n\t\tgetBinaryFast(id) {\r\n\t\t\tthis.getSizeBinaryFast(id)\r\n\t\t\treturn lastSize === 0xffffffff ? undefined : this.db.unsafeBuffer.subarray(0, lastSize)\r\n\t\t}\r\n\t\tgetBinary(id) {\r\n\t\t\tthis.getSizeBinaryFast(id)\r\n\t\t\treturn lastSize === 0xffffffff ? undefined : Uint8ArraySlice.call(this.db.unsafeBuffer, 0, lastSize)\r\n\t\t}\r\n\t\tget(id) {\r\n\t\t\tif (this.decoder) {\r\n\t\t\t\tthis.getSizeBinaryFast(id)\r\n\t\t\t\treturn lastSize === 0xffffffff ? undefined : this.decoder.decode(this.db.unsafeBuffer, lastSize)\r\n\t\t\t}\r\n\t\t\tif (this.encoding == 'binary')\r\n\t\t\t\treturn this.getBinary(id)\r\n\r\n\t\t\tlet result = this.getString(id)\r\n\t\t\tif (result) {\r\n\t\t\t\tif (this.encoding == 'json')\r\n\t\t\t\t\treturn JSON.parse(result)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t}\r\n\t\tgetEntry(id) {\r\n\t\t\tlet value = this.get(id)\r\n\t\t\tif (value !== undefined) {\r\n\t\t\t\tif (this.useVersions)\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\tversion: getLastVersion(),\r\n\t\t\t\t\t\t//size: lastSize\r\n\t\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t//size: lastSize\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tresetReadTxn() {\r\n\t\t\tresetReadTxn()\r\n\t\t}\r\n\t\tdoesExist(key, versionOrValue) {\r\n\t\t\tif (!env.writeTxn)\r\n\t\t\t\treadTxnRenewed ? readTxn : renewReadTxn()\r\n\t\t\tif (versionOrValue === undefined) {\r\n\t\t\t\tthis.getSizeBinaryFast(key)\r\n\t\t\t\treturn lastSize !== 0xffffffff\r\n\t\t\t}\r\n\t\t\telse if (this.useVersions) {\r\n\t\t\t\tthis.getSizeBinaryFast(key)\r\n\t\t\t\treturn lastSize !== 0xffffffff && matches(getLastVersion(), versionOrValue)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (versionOrValue && versionOrValue[binaryBuffer])\r\n\t\t\t\t\tversionOrValue = versionOrValue[binaryBuffer]\r\n\t\t\t\telse if (this.encoder)\r\n\t\t\t\t\tversionOrValue = this.encoder.encode(versionOrValue)\r\n\t\t\t\tif (typeof versionOrValue == 'string')\r\n\t\t\t\t\tversionOrValue = Buffer.from(versionOrValue)\r\n\t\t\t\treturn this.getValuesCount(key, { start: versionOrValue, exactMatch: true}) > 0\r\n\t\t\t}\r\n\t\t}\r\n\t\tbackup(path) {\r\n\t\t\treturn new Promise((resolve, reject) => env.copy(path, false, (error) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\treject(error)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresolve()\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\t\t}\r\n\t\tclose(callback) {\r\n\t\t\tthis.db.close()\r\n\t\t\tif (this.isRoot) {\r\n\t\t\t\tif (readTxn) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treadTxn.abort()\r\n\t\t\t\t\t} catch(error) {}\r\n\t\t\t\t}\r\n\t\t\t\treadTxnRenewed = null\r\n\t\t\t\tenv.close()\r\n\t\t\t}\r\n\t\t\tthis.status = 'closed'\r\n\t\t\tif (callback)\r\n\t\t\t\tcallback()\t\t\t\r\n\t\t}\r\n\t\tisOperational() {\r\n\t\t\treturn this.status == 'open'\r\n\t\t}\r\n\t\tgetStats() {\r\n\t\t\treturn this.db.stat(readTxnRenewed ? readTxn : renewReadTxn())\r\n\t\t}\r\n\t\tsync(callback) {\r\n\t\t\treturn env.sync(callback || function(error) {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tconsole.error(error)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tdeleteDB() {\r\n\t\t\tconsole.warn('deleteDB() is deprecated, use drop or dropSync instead')\r\n\t\t\treturn this.dropSync()\r\n\t\t}\r\n\t\tdropSync() {\r\n\t\t\tthis.transactionSync(() =>\r\n\t\t\t\tthis.db.drop({\r\n\t\t\t\t\tjustFreePages: false\r\n\t\t\t\t}),\r\n\t\t\t{ abortable: false })\r\n\t\t}\r\n\t\tclear(callback) {\r\n\t\t\tif (typeof callback == 'function')\r\n\t\t\t\treturn this.clearAsync(callback)\r\n\t\t\tconsole.warn('clear() is deprecated, use clearAsync or clearSync instead')\r\n\t\t\tthis.clearSync()\r\n\t\t}\r\n\t\tclearSync() {\r\n\t\t\tif (this.encoder && this.encoder.structures)\r\n\t\t\t\tthis.encoder.structures = []\r\n\t\t\tthis.transactionSync(() =>\r\n\t\t\t\tthis.db.drop({\r\n\t\t\t\t\tjustFreePages: true\r\n\t\t\t\t}),\r\n\t\t\t{ abortable: false })\r\n\t\t}\r\n\t\treaderCheck() {\r\n\t\t\treturn env.readerCheck()\r\n\t\t}\r\n\t\treaderList() {\r\n\t\t\treturn env.readerList().join('')\r\n\t\t}\r\n\t\tsetupSharedStructures() {\r\n\t\t\tconst getStructures = () => {\r\n\t\t\t\tlet lastVersion // because we are doing a read here, we may need to save and restore the lastVersion from the last read\r\n\t\t\t\tif (this.useVersions)\r\n\t\t\t\t\tlastVersion = getLastVersion()\r\n\t\t\t\tlet buffer = this.getBinary(this.sharedStructuresKey)\r\n\t\t\t\tif (this.useVersions)\r\n\t\t\t\t\tsetLastVersion(lastVersion)\r\n\t\t\t\treturn buffer ? this.encoder.decode(buffer) : []\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tsaveStructures: (structures, previousLength) => {\r\n\t\t\t\t\treturn this.transactionSyncStart(() => {\r\n\t\t\t\t\t\tlet existingStructuresBuffer = this.getBinary(this.sharedStructuresKey)\r\n\t\t\t\t\t\tlet existingStructures = existingStructuresBuffer ? this.encoder.decode(existingStructuresBuffer) : []\r\n\t\t\t\t\t\tif (existingStructures.length != previousLength)\r\n\t\t\t\t\t\t\treturn false // it changed, we need to indicate that we couldn't update\r\n\t\t\t\t\t\tthis.put(this.sharedStructuresKey, structures)\r\n\t\t\t\t\t})\r\n\t\t\t\t},\r\n\t\t\t\tgetStructures,\r\n\t\t\t\tcopyBuffers: true, // need to copy any embedded buffers that are found since we use unsafe buffers\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// if caching class overrides putSync, don't want to double call the caching code\r\n\tconst putSync = LMDBStore.prototype.putSync\r\n\tconst removeSync = LMDBStore.prototype.removeSync\r\n\taddQueryMethods(LMDBStore, { env, getReadTxn() {\r\n\t\treturn readTxnRenewed ? readTxn : renewReadTxn()\r\n\t}, saveKey, keyBytes, keyBytesView, getLastVersion })\r\n\taddWriteMethods(LMDBStore, { env, fixedBuffer: keyBytes, resetReadTxn, binaryBuffer, ...options })\r\n\tLMDBStore.prototype.supports = {\r\n\t\tpermanence: true,\r\n\t\tbufferKeys: true,\r\n\t\tpromises: true,\r\n\t\tsnapshots: true,\r\n\t\tclear: true,\r\n\t\tstatus: true,\r\n\t\tdeferredOpen: true,\r\n\t\topenCallback: true,\t\r\n\t}\r\n\treturn options.cache ?\r\n\t\tnew (CachingStore(LMDBStore))(options.name || null, options) :\r\n\t\tnew LMDBStore(options.name || null, options)\r\n}\r\n\r\nfunction matches(previousVersion, ifVersion){\r\n\tlet matches\r\n\tif (previousVersion) {\r\n\t\tif (ifVersion) {\r\n\t\t\tmatches = previousVersion == ifVersion\r\n\t\t} else {\r\n\t\t\tmatches = false\r\n\t\t}\r\n\t} else {\r\n\t\tmatches = !ifVersion\r\n\t}\r\n\treturn matches\r\n}\r\n\r\nclass Entry {\r\n\tconstructor(value, version, db) {\r\n\t\tthis.value = value\r\n\t\tthis.version = version\r\n\t\tthis.db = db\r\n\t}\r\n\tifSamePut() {\r\n\r\n\t}\r\n\tifSameRemove() {\r\n\r\n\t}\r\n}\r\nexport function getLastEntrySize() {\r\n\treturn lastSize\r\n}\r\nexport function getLastVersion() {\r\n\treturn keyBytesView.getFloat64(16, true)\r\n}\r\n\r\nexport function setLastVersion(version) {\r\n\treturn keyBytesView.setFloat64(16, version, true)\r\n}\r\nexport function asBinary(buffer) {\r\n\treturn {\r\n\t\t[binaryBuffer]: buffer\r\n\t}\r\n}\r\nlet saveBuffer, saveDataView, saveDataAddress\r\nlet savePosition = 8000\r\nfunction allocateSaveBuffer() {\r\n\tsaveBuffer = Buffer.alloc(8192)\r\n\tsaveBuffer.dataView = saveDataView = new DataView(saveBuffer.buffer, saveBuffer.byteOffset, saveBuffer.byteLength)\r\n\tsaveBuffer.buffer.address = getAddress(saveBuffer.buffer)\r\n\tsaveDataAddress = saveBuffer.buffer.address + saveBuffer.byteOffset\r\n\tsavePosition = 0\r\n\r\n}\r\nfunction allocateFixedBuffer() {\r\n\tkeyBytes = Buffer.allocUnsafeSlow(2048)\r\n\tconst keyBuffer = keyBytes.buffer\r\n\tkeyBytesView = keyBytes.dataView = new DataView(keyBytes.buffer, 0, 2048) // max key size is actually 1978\r\n\tkeyBytes.uint32 = new Uint32Array(keyBuffer, 0, 512)\r\n\tkeyBytes.float64 = new Float64Array(keyBuffer, 0, 256)\r\n\tkeyBytes.uint32.address = keyBytes.address = keyBuffer.address = getAddress(keyBuffer)\r\n}\r\nfunction saveKey(key, writeKey, saveTo) {\r\n\tif (savePosition > 6200) {\r\n\t\tallocateSaveBuffer()\r\n\t}\r\n\tlet start = savePosition\r\n\tsavePosition = writeKey(key, saveBuffer, start + 4)\r\n\tsaveDataView.setUint32(start, savePosition - start - 4, true)\r\n\tsaveTo.saveBuffer = saveBuffer\r\n\tsavePosition = (savePosition + 7) & 0xfffff8\r\n\treturn start + saveDataAddress\r\n}\r\n","import { createRequire } from 'module';\r\nconst require = createRequire(import.meta.url)\r\nimport { fileURLToPath } from 'url'\r\nimport { dirname } from 'path'\r\nimport { setNativeFunctions } from './native.js'\r\nimport fs from 'fs'\r\nimport { arch } from 'os'\r\nlet nativeFunctions, dirName = dirname(fileURLToPath(import.meta.url)).replace(/dist$/, '')\r\ntry {\r\n\tconsole.log(dirName)\r\n\tnativeFunctions = require('node-gyp-build')(dirName)\r\n\tif (process.versions.modules == 93)\r\n\t\trequire('v8').setFlagsFromString('--turbo-fast-api-calls')\r\n} catch(error) {\r\n\tif (process.versions.modules == 93) {\r\n\t\t// use this abi version as the backup version without turbo-fast-api-calls enabled\r\n\t\tObject.defineProperty(process.versions, 'modules', { value: '92' })\r\n\t\ttry {\r\n\t\t\tnativeFunctions = require('node-gyp-build')(dirName)\r\n\t\t} catch(secondError) {\r\n\t\t\tthrow error\r\n\t\t} finally {\r\n\t\t\tObject.defineProperty(process.versions, 'modules', { value: '93' })\r\n\t\t}\r\n\t} else\r\n\t\tthrow error\r\n}\r\nnativeFunctions.require = require\r\nnativeFunctions.arch = arch\r\nnativeFunctions.fs = fs\r\nsetNativeFunctions(nativeFunctions)\r\nexport { toBufferKey as keyValueToBuffer, compareKeys, compareKeys as compareKey, fromBufferKey as bufferToKeyValue } from 'ordered-binary/index.js'\r\nexport { ABORT } from './writer.js'\r\nexport { levelup } from './level.js'\r\nexport { open, asBinary, getLastVersion, getLastEntrySize, setLastVersion, allDbs } from './index.js'\r\nimport { toBufferKey as keyValueToBuffer, compareKeys as compareKey, fromBufferKey as bufferToKeyValue } from 'ordered-binary/index.js'\r\nimport { open, getLastVersion } from './index.js'\r\nexport default {\r\n\topen, getLastVersion, compareKey, keyValueToBuffer, bufferToKeyValue\r\n}"],"names":["require","getAddress","WeakLRUCache","enableNullTermination","writeKey","readKey","getLastVersion","Uint8ArraySlice","SYNC_PROMISE_FAIL","path","extname","basename","dirname","MsgpackrEncoder","saveKey","saveBuffer","saveDataView","saveDataAddress","savePosition","allocateSaveBuffer","createRequire","fileURLToPath","arch","fs","compareKey","keyValueToBuffer","bufferToKeyValue"],"mappings":"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"}